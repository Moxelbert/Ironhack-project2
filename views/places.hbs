<div class="overview">
  {{#each places}}
  <div class="container" style="text-align:center;margin-top:20px;">
    <a href='/places/{{this._id}}' style="color:#adad85; font-weight: bold;font-size:24px;">{{this.name}}</a>
    <img src="{{this.imgURL}}" alt="{{this.name}}" id="overview-img">
  </div>
  {{/each}}
  {{#each places}}
  <div class="container">
    <a href='/places/{{this._id}}'>{{this.name}}</a>
    <img src="{{this.imgURL}}" alt="{{this.name}}" id="overview-img">
  </div>
  {{/each}}
</div>
<div class="overview-btn">
  <button type="button" class="btn btn-dark btn-primary btn-lg" style="background-color:brown;"><a style="color: black;"
      href="/places/newPlace"> Add haunted place to the Lexicanum</a></button>
</div>

<hr>
{{places}}
<hr>

<div id="map"></div>

<script>
  mapboxgl.accessToken = 'pk.eyJ1IjoiYS1idXJkZXR0IiwiYSI6ImNqcnQ4Y29rNzByZjU0M252Zzhwcms1ZmEifQ.MHWhxIcofrG90BNJvRTjXg';
  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/dark-v9',
    zoom: 8,
    center: [2, 2]
  });

  // Add a marker
  var marker = new mapboxgl.Marker({
    color: 'purple',
    draggable: true
  })
    .setLngLat([1, 1])
    .addTo(map);

  // If we can use navigator.geolocation in this browser STORING COORDINATES HOW??????
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(position => {
      let lng = position.coords.longitude
      let lat = position.coords.latitude
      map.setCenter([lng, lat])
      let userMarker = new mapboxgl.Marker({
        color: 'green'
      })
        .setLngLat([lng, lat])
        .addTo(map)
    })
  }

  let coords = [
    { lng: -3.7004502, lat: 40.3925362 },
  ]
  var newGhosts = []

  for (let i = 0; i < coordinates.length; i++) {
    let newMarker = new mapboxgl.Marker({
      color: '#32c3ff'
    })
      .setLngLat([coordinates[i].lng, coordinates[i].lat])
      .addTo(map)
    newGhosts.push(newMarker)
  }

  map.on('load', function () {
    map.addLayer({
      'id': '3d-buildings',
      'source': 'composite',
      'source-layer': 'building',
      'filter': ['==', 'extrude', 'true'],
      'type': 'fill-extrusion',
      'minzoom': 15,
      'paint': {
        'fill-extrusion-color': '#aaa',

        // use an 'interpolate' expression to add a smooth transition effect to the
        // buildings as the user zooms in
        'fill-extrusion-height': [
          "interpolate", ["linear"], ["zoom"],
          15, 0,
          15.05, ["get", "height"]
        ],
        'fill-extrusion-base': [
          "interpolate", ["linear"], ["zoom"],
          15, 0,
          15.05, ["get", "min_height"]
        ],
        'fill-extrusion-opacity': .6
      }
    }, labelLayerId);
  });


  map.on('load', function (e) {
    // Add the data to your map as a layer
    map.addLayer({
      id: 'locations',
      type: 'symbol',
      // Add a GeoJSON source containing place coordinates and information.
      source: {
        type: 'geojson',
        data: stores
      },
      layout: {
        'icon-image': 'restaurant-15',
        'icon-allow-overlap': true,
      }
    });
  });